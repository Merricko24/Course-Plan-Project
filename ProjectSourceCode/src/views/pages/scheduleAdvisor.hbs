<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0"/>
  <title>Advisor View - Schedule</title>
  <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet"/>
  <link rel="stylesheet" href="../../resources/css/style.css"/>
  <style>
    .class-block {
      background-color: #e9ecef;
      padding: 8px;
      margin-bottom: 5px;
      border-radius: 4px;
      display: flex;
      justify-content: space-between;
      align-items: center;
    }

    .class-block button {
      background-color: #dc3545;
      color: white;
      border: none;
      border-radius: 4px;
      padding: 2px 8px;
      font-size: 12px;
      cursor: pointer;
    }

    #searchBarModal {
      display: none;
      position: fixed;
      z-index: 999;
      left: 0;
      top: 0;
      width: 100%;
      height: 100%;
      background-color: rgba(0, 0, 0, 0.5);
    }

    .modal-content {
      background-color: #fff;
      margin: 15% auto;
      padding: 20px;
      width: 300px;
      border-radius: 8px;
      text-align: center;
      position: relative;
    }

    .close-btn {
      position: absolute;
      top: 10px;
      right: 15px;
      font-size: 24px;
      cursor: pointer;
      color: #999;
    }

    .close-btn:hover {
      color: #333;
    }

    .student-info {
      background-color: #f8f9fa;
      padding: 15px;
      border-radius: 8px;
      margin-bottom: 20px;
    }
  </style>
</head>
<body>
  <div class="main-container">
    <!-- Sidebar for Student Selection -->
    <div class="sidebar">
      <h2>Advisor View</h2>
      <label for="studentSelect">Select Student:</label>
      <select id="studentSelect" class="form-select mb-3" onchange="loadStudentInfo()">
        <option disabled selected value="">-- Choose Student --</option>
      </select>
      <div id="studentInfo" class="student-info"></div>
    </div>

    <!-- Content Area -->
    <div class="content">
      <div class="scroll-container">
        <!-- Semester blocks -->
        <div class="semester">
          <h3>Fall 2023</h3>
          <div class="classes-container"></div>
          <button onclick="openSearchBar(this)" class="btn custom-btn w-100">Add Class</button>
        </div>
        <div class="semester">
          <h3>Spring 2024</h3>
          <div class="classes-container"></div>
          <button onclick="openSearchBar(this)" class="btn custom-btn w-100">Add Class</button>
        </div>
        <div class="semester">
          <h3>Summer 2024</h3>
          <div class="classes-container"></div>
          <button onclick="openSearchBar(this)" class="btn custom-btn w-100">Add Class</button>
        </div>
        <div class="semester">
          <h3>Fall 2024</h3>
          <div class="classes-container"></div>
          <button onclick="openSearchBar(this)" class="btn custom-btn w-100">Add Class</button>
        </div>
        <div class="semester">
          <h3>Spring 2025</h3>
          <div class="classes-container"></div>
          <button onclick="openSearchBar(this)" class="btn custom-btn w-100">Add Class</button>
        </div>
        <div class="semester">
          <h3>Summer 2025</h3>
          <div class="classes-container"></div>
          <button onclick="openSearchBar(this)" class="btn custom-btn w-100">Add Class</button>
        </div>
      </div>
    </div>
  </div>

  <!-- Modal -->
  <div id="searchBarModal">
    <div class="modal-content">
      <span class="close-btn" onclick="closeSearchBar()">&times;</span>
      <h3>Search Class</h3>
      <input type="text" id="classNameInput" placeholder="Enter class name..." />
      <button class="search-button" onclick="addClassFromModal()">Search</button>
    </div>
  </div>

  <!-- Footer Partial -->
  {{> footer}}

  <!-- JavaScript: Advisor & Student Logic -->
  <script>
    const advisorId = 'umar1234'; // This would be dynamically set by backend auth

    const advisors = {
      'umar1234': ['test1234', 'joab1234'],
      'eche1337': ['coca9230', 'bpit2018']
    };

    const students = {
      'test1234': { first_name: 'Test', last_name: 'User', email: 'test@colorado.edu', year: 'Senior', major: 'Computer Science', degree: 'BSCS' },
      'joab1234': { first_name: 'John', last_name: 'Applebee', email: 'joab1234@colorado.edu', year: 'Freshman', major: 'Psychology', degree: 'BSPSYCH' },
      'coca9230': { first_name: 'Coleman', last_name: 'Caldwell', email: 'coca9230@colorado.edu', year: 'Senior', major: 'Info Science', degree: 'BSINFO' },
      'bpit2018': { first_name: 'Brad', last_name: 'Pitt', email: 'bpit2018@colorado.edu', year: 'Sophomore', major: 'Business', degree: 'BSBN' }
    };

    // Populate dropdown
    window.onload = function () {
      const select = document.getElementById('studentSelect');
      const studentIds = advisors[advisorId];
      studentIds.forEach(id => {
        const option = document.createElement('option');
        option.value = id;
        option.textContent = students[id].first_name + ' ' + students[id].last_name;
        select.appendChild(option);
      });
    };

    function loadStudentInfo() {
      const studentId = document.getElementById('studentSelect').value;
      const student = students[studentId];
      document.getElementById('studentInfo').innerHTML = `
        <strong>${student.first_name} ${student.last_name}</strong><br>
        Email: ${student.email}<br>
        Year: ${student.year}<br>
        Major: ${student.major}<br>
        Degree: ${student.degree}
      `;
    }

    // Existing Modal & Class Add/Remove JS
    let currentButton = null;

    function openSearchBar(button) {
      currentButton = button;
      document.getElementById('searchBarModal').style.display = 'block';
    }

    function closeSearchBar() {
      document.getElementById('searchBarModal').style.display = 'none';
    }

    window.onclick = function (event) {
      const modal = document.getElementById('searchBarModal');
      if (event.target === modal) closeSearchBar();
    };

    function addClassFromModal() {
      let className = document.getElementById('classNameInput').value.trim();
      if (!className) {
        alert("Please enter a class name");
        return;
      }

      let semesterDiv = currentButton.parentNode;
      let classesContainer = semesterDiv.querySelector('.classes-container');

      let classBlock = document.createElement("div");
      classBlock.className = "class-block";
      classBlock.innerHTML = `<span>${className}</span><button onclick="removeClass(this)">Remove</button>`;

      classBlock.onclick = function (event) {
        if (event.target.tagName !== 'BUTTON') showInfoBubble(event, className);
      };

      classesContainer.appendChild(classBlock);
      document.getElementById('classNameInput').value = "";
      closeSearchBar();
    }

    function removeClass(button) {
      button.closest('.class-block').remove();
    }

    function showInfoBubble(event, className) {
      let bubble = document.createElement("div");
      bubble.className = "info-bubble";
      bubble.textContent = "More info about " + className;
      Object.assign(bubble.style, {
        position: "absolute", backgroundColor: "#fff", border: "1px solid #ccc",
        padding: "5px", borderRadius: "4px", boxShadow: "0px 2px 6px rgba(0,0,0,0.2)", zIndex: 1000
      });

      let rect = event.target.getBoundingClientRect();
      bubble.style.top = (rect.top + window.scrollY) + "px";
      bubble.style.left = (rect.right + 10 + window.scrollX) + "px";

      document.body.appendChild(bubble);
      bubble.onclick = () => document.body.removeChild(bubble);
      setTimeout(() => {
        if (document.body.contains(bubble)) document.body.removeChild(bubble);
      }, 3000);
    }
  </script>
</body>
</html>